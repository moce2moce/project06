import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import BlogItem from "../components/BlogItem";
import PageTitle from "../components/PageTitle";
import ProductItem from "../components/ProductItem";
import { BlogItemCard, ProductItemCard } from "../interfaces/MyItnerfaces";

interface Props {
  blogs: BlogItemCard[];
  products: ProductItemCard[];
}

const Search: NextPage<Props> = ({ blogs, products }) => {
  const router = useRouter();
  return (
    <>
      <Head>
        <title>Store - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={router.pathname} />

      <div className="bg0 m-t-23 p-b-140 mt-5">
        <div className="container">
          {/* blogs  */}
          <>
            <h2 className="mb-5">Blogs</h2>
            <div className="row isotope-grid">
              {/* blog skeleton - search result */}
              {blogs.length > 0 ? (
                blogs.map((blog) => (
                  <div className="col-4" key={`blogItems-${blog.id}`}>
                    <BlogItem
                      id={blog.id}
                      author={blog.author}
                      category={blog.category}
                      date={blog.date}
                      excerpt={blog.excerpt}
                      img={blog.img}
                      title={blog.title}
                    />
                  </div>
                ))
              ) : (
                <div className="col-12 mb-5">
                  <p>No blogs found</p>
                </div>
              )}
            </div>
          </>

          {/* products */}
          <>
            <h2 className="mb-5">Products</h2>
            <div className="row isotope-grid">
              {/* product skeleton */}
              {products.length > 0 ? (
                products.map((product) => (
                  <ProductItem
                    key={`productItemz-${product.id}`}
                    id={product.id}
                    img={product.img}
                    title={product.title}
                    price={product.price}
                  />
                ))
              ) : (
                <div className="col-12  mb-5">
                  <p>No products found</p>
                </div>
              )}
            </div>
          </>
        </div>
      </div>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  let searchQuery = query.q;

  if (searchQuery) {
    const res = await fetch(`http://localhost:5001/blogs?q=${searchQuery}`);
    const blogs = await res.json();

    const resProducts = await fetch(
      `http://localhost:5001/products?q=${searchQuery}`
    );
    const products = await resProducts.json();

    return {
      props: {
        blogs,
        products,
      },
    };
  }

  return {
    notFound: true,
  };
};

export default Search;
